name: Build Android zash
run-name: Creating Production Ready Android App 🚀 Z
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # 每周日 UTC 00:00 自动运行

jobs:
  build:
    name: Build APK zash
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          ref: zash

      - name: Install Build Tools and jq
        run: sudo apt-get update && sudo apt-get install -y hub zipalign apksigner jq

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: Install dependencies
        run: npm ci

      - name: Download and prepare web assets (zashboard dist)
        run: |
          wget https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip
          unzip dist.zip -d www
          rm dist.zip

      - name: Clean Android Directory Before Add/Sync
        run: rm -rf android/

      - name: Explicitly Add Android Platform
        run: npx cap add android

      - name: Capacitor Sync Android
        run: npx cap sync android

      - name: Generate icons and splash screen to android folder
        run: |
          if [ -d "./resources" ]; then
            npm install @capacitor/assets --save-dev
            npx capacitor-assets generate --android
          fi

      - name: Copy web assets and icons to Android
        run: npx cap copy android

      - name: AndroidManifestModify
        run: |
          if [ -f "AndroidManifest.xml" ]; then
            cp AndroidManifest.xml android/app/src/main/AndroidManifest.xml
          fi

      - name: Fetch Latest Tag from zashboard
        id: get_zashboard_tag
        run: |
          ZASHBOARD_REPO="Zephyruso/zashboard"
          LATEST_TAG=$(curl -sL "https://api.github.com/repos/$ZASHBOARD_REPO/releases/latest" | jq -r .tag_name)
          if [ -z "$LATEST_TAG" ] || [ "$LATEST_TAG" == "null" ]; then
            echo "::error::Failed to fetch latest tag"
            exit 1
          fi
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Generate versionCode and versionName
        id: versioning
        run: |
          VERSION_NAME="${{ steps.get_zashboard_tag.outputs.LATEST_TAG }}"
          VERSION_CODE=$(date +%s)
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Build unsigned app with version
        run: |
          cd android
          ./gradlew assembleRelease -PVERSION_NAME=${{ steps.versioning.outputs.VERSION_NAME }} -PVERSION_CODE=${{ steps.versioning.outputs.VERSION_CODE }}

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > android/release.decrypted.jks

      - name: Sign release build
        run: |
          UNSIGNED_APK="./android/app/build/outputs/apk/release/app-release-unsigned.apk"
          ALIGNED_APK="./android/app/build/outputs/apk/release/app-release-unsigned-aligned.apk"
          SIGNED_APK="./android/app/build/outputs/apk/release/app-release-signed.apk"
          zipalign -v 4 "$UNSIGNED_APK" "$ALIGNED_APK"
          apksigner sign \
            --ks android/release.decrypted.jks \
            --ks-key-alias release \
            --ks-pass pass:${{ secrets.RELEASE_KEYSTORE_PASSWORD }} \
            --out "$SIGNED_APK" \
            "$ALIGNED_APK"

      - name: Rename Signed APK
        id: rename_apk
        run: |
          VERSION_NAME="${{ steps.versioning.outputs.VERSION_NAME }}"
          SOURCE_APK="./android/app/build/outputs/apk/release/app-release-signed.apk"
          SANITIZED_VERSION_NAME=$(echo "$VERSION_NAME" | sed 's/[^a-zA-Z0-9._-]/_/g')
          FINAL_APK_NAME="Azlaneui-${SANITIZED_VERSION_NAME}.apk"
          mv "$SOURCE_APK" "$FINAL_APK_NAME"
          echo "FINAL_APK_PATH=$FINAL_APK_NAME" >> $GITHUB_OUTPUT

      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-zashboard
          name: Azlaneui ${{ steps.versioning.outputs.VERSION_NAME }} (zash)
          body: |
            Android build corresponding to zashboard release tag: **${{ steps.versioning.outputs.VERSION_NAME }} (zash)**
          files: ${{ steps.rename_apk.outputs.FINAL_APK_PATH }}
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}