name: Build Android zash
run-name: Creating Production Ready Android App 🚀 Z

on:
  # 每周一 UTC 9 点运行
  schedule:
    - cron: '0 9 * * 1'
  # 手动触发
  workflow_dispatch:

jobs:
  build:
    name: Build APK zash if upstream changed
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          ref: zash

      - name: Check latest upstream release
        id: upstream
        run: |
          UPSTREAM_REPO="Zephyruso/zashboard"
          echo "Fetching latest release tag from $UPSTREAM_REPO..."
          LATEST_TAG=$(curl -sL "https://api.github.com/repos/$UPSTREAM_REPO/releases/latest" | jq -r .tag_name)
          if [ -z "$LATEST_TAG" ] || [ "$LATEST_TAG" == "null" ]; then
            echo "::error::Could not fetch latest tag from $UPSTREAM_REPO."
            exit 1
          fi
          echo "Latest upstream tag: $LATEST_TAG"

          CACHE_FILE=".last_build_tag"
          if [ -f "$CACHE_FILE" ]; then
            LAST_TAG=$(cat $CACHE_FILE)
          else
            LAST_TAG=""
          fi

          if [ "$LATEST_TAG" == "$LAST_TAG" ]; then
            echo "Upstream has not changed, skipping build."
            echo "SKIP_BUILD=true" >> $GITHUB_OUTPUT
          else
            echo "Upstream changed, will build."
            echo "$LATEST_TAG" > $CACHE_FILE
            echo "SKIP_BUILD=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip job if upstream not changed
        if: steps.upstream.outputs.SKIP_BUILD == 'true'
        run: |
          echo "No new upstream release. Exiting."
          exit 0

      # ---- 原有构建流程开始 ----
      - name: Install Build Tools and jq
        run: sudo apt-get update && sudo apt-get install -y hub zipalign apksigner jq

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: Install dependencies
        run: npm ci

      - name: Download gh pages (zashboard dist)
        run: |
          wget https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip
          unzip dist.zip

      - name: Add android folder if not present
        run: if [ ! -d "./android" ]; then npx cap add android; fi

      - name: Capacitor update
        run: npx cap update

      - name: Capacitor copy
        run: npx cap copy

      - name: Generate icons and splash screen to android folder
        run: if [ -d "./resources" ]; then npm install @capacitor/assets --save-dev && npx capacitor-assets generate --android; fi

      - name: AndroidManifestModify
        run: rm android/app/src/main/AndroidManifest.xml && cp AndroidManifest.xml android/app/src/main/AndroidManifest.xml

      - name: Build unsigned app
        run: cd android && ./gradlew assembleRelease

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > android/release.decrypted.jks

      - name: Sign dev build
        run: |
          UNSIGNED_APK="./android/app/build/outputs/apk/release/app-release-unsigned.apk"
          ALIGNED_APK="./android/app/build/outputs/apk/release/app-release-unsigned-aligned.apk"
          SIGNED_APK="./android/app/build/outputs/apk/release/app-release-signed.apk"
          zipalign -v 4 "$UNSIGNED_APK" "$ALIGNED_APK"
          apksigner sign --ks android/release.decrypted.jks \
            --ks-key-alias release \
            --ks-pass pass:${{ secrets.RELEASE_KEYSTORE_PASSWORD }} \
            --out "$SIGNED_APK" \
            "$ALIGNED_APK"

      - name: Fetch Latest Tag from zashboard
        id: get_zashboard_tag
        run: |
          ZASHBOARD_REPO="Zephyruso/zashboard"
          LATEST_TAG=$(curl -sL "https://api.github.com/repos/$ZASHBOARD_REPO/releases/latest" | jq -r .tag_name)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Set Build Timestamp Tag
        id: current-datetime
        run: echo "CURRENT_DATETIME=$(date +'%Y-%m-%d-%H_%M_%S%z')" >> "$GITHUB_OUTPUT"

      - name: Rename Signed APK
        id: rename_apk
        run: |
          VERSION_NAME="${{ steps.get_zashboard_tag.outputs.LATEST_TAG }}"
          SANITIZED_VERSION_NAME=$(echo "$VERSION_NAME" | sed 's/[^a-zA-Z0-9._-]/_/g')
          FINAL_APK_NAME="Azlaneui-${SANITIZED_VERSION_NAME}.apk"
          mv ./android/app/build/outputs/apk/release/app-release-signed.apk "$FINAL_APK_NAME"
          echo "FINAL_APK_PATH=$FINAL_APK_NAME" >> $GITHUB_OUTPUT

      - name: Upload APK to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-zashboard
          name: Azlaneui ${{ steps.get_zashboard_tag.outputs.LATEST_TAG }} (zash)
          files: ${{ steps.rename_apk.outputs.FINAL_APK_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
