name: Build Android
run-name: Creating Production Ready Android App 🚀
on:
  issues:
    types: [opened]

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          ref: master

# Generated by chatgpt - start
      - name: Get last issue creation time
        id: get_last_issue_time
        run: |
          last_time=$(curl -s "https://api.github.com/repos/${{ github.repository }}/issues?state=open&per_page=1" | jq '.[0].created_at' | tr -d '"')
          echo "Last issue created at: $last_time"
          echo "last_time=$last_time" >> $GITHUB_ENV
  
      - name: Check cooldown time
        run: |
          current_time=$(date --utc +%Y-%m-%dT%H:%M:%SZ)
          last_time=${{ env.last_time }}
          if [[ -z "$last_time" ]]; then
            echo "No previous issue found. Proceeding."
          else
            # 计算时间差，单位秒
            diff_seconds=$(( $(date --date="$current_time" +%s) - $(date --date="$last_time" +%s) ))
            if [ $diff_seconds -lt 3600 ]; then  # 判断时间差是否小于 1 小时
              echo "Cooldown in progress. Skipping action."
              exit 1
            else
              echo "Cooldown period over. Proceeding."
            fi
          fi
# Generated by chatgpt - end

      - name: Install HUB
        run: sudo apt-get update && sudo apt-get install -y hub zipalign apksigner

      - name: download gh pages
        run: |
          wget https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip
          unzip gh-pages.zip

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: install dependencies
        run: npm ci	

      - name: Add android folder if not present
        run: if [ ! -d "./android" ]; then npx cap add android; fi

      - name: Capacitor update
        run: npx cap update

      - name: Capacitor copy
        run: npx cap copy
      
      # TODO: Check for folder structure in README for generating splash screen 
      - name: Generate icons and splash screen to android folder 
        run:  if [ -d "./resources" ]; then npm install @capacitor/assets --save-dev && npx capacitor-assets generate --android; fi

      - name: AndroidManifestModify
        run: rm android/app/src/main/AndroidManifest.xml && cp AndroidManifest.xml android/app/src/main/AndroidManifest.xml

      - name: Build app
        run: cd android && ./gradlew assembleRelease

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > android/release.decrypted.jks

      - name: Sign dev build
        run: |
          zipalign 4 ./android/app/build/outputs/apk/release/app-release-unsigned.apk ./android/app/build/outputs/apk/release/app-release-unsigned-aligned.apk 
          apksigner sign --ks android/release.decrypted.jks \
          --ks-key-alias release \
          --ks-pass pass:${{ secrets.RELEASE_KEYSTORE_PASSWORD }} \
          --out ./android/app/build/outputs/apk/release/app-release-signed.apk \
          ./android/app/build/outputs/apk/release/app-release-unsigned-aligned.apk

      - name: Set Tag
        id: current-datetime
        run: echo "CURRENT_DATETIME=$(date +'%Y-%m-%d-%H_%M_%S%z')" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./android/app/build/outputs/

      - name: Build Release
        shell: bash
        run: |
          hub release create ${{ steps.current-datetime.outputs.CURRENT_DATETIME }} \
          -m ${{ steps.current-datetime.outputs.CURRENT_DATETIME }} \
          -m Created by: ${{ github.event.issue.user.login }} \
          -a ./android/app/build/outputs/apk/release/app-release-signed.apk
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
