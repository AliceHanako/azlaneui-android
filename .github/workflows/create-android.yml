name: Build Android
run-name: Creating Production Ready Android App ðŸš€
on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    # TODO: add the default directory - COMMENT IF IT'S NOT IN SUBFOLDER
    # defaults:
    #   run:
    #     working-directory: ./frontend
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        # TODO: add your branch to checkout
        with:
          ref: master
          submodules: 'true' 
        
      - name: Install HUB
        run: sudo apt-get update && sudo apt-get install -y hub
          
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19.x

      - name: install dependencies
        run: npm ci	

      - name: install pnpm
        run: npm install -g pnpm@latest-10

      - name: build metacubed
        run: |
          pnpm install
          pnpm build
        working-directory: ./metacubexd

      - name: Add android folder if not present
        run: if [ ! -d "./android" ]; then npx cap add android; fi

      - name: Capacitor update
        run: npx cap update

      - name: Capacitor copy
        run: npx cap copy
      
      # TODO: Check for folder structure in README for generating splash screen 
      - name: Generate icons and splash screen to android folder 
        run:  if [ -d "./resources" ]; then npm install @capacitor/assets --save-dev && npx capacitor-assets generate --android; fi

      - name: AndroidManifestModify
        run: rm android/app/src/main/AndroidManifest.xml && cp AndroidManifest.xml android/app/src/main/AndroidManifest.xml

      - name: Build app
        run: cd android && ./gradlew assembleDebug && ./gradlew assembleRelease

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > android/release.decrypted.jks

      - name: Sign dev build
        run: jarsigner -keystore android/release.decrypted.jks -storepass "${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./android/app/build/outputs/apk/release/app-release-unsigned.apk ./android/app/build/outputs/apk/release/app-release-signed.apk release

      - name: Set Tag
        id: current-datetime
        run: echo "CURRENT_DATETIME=$(date +'%Y-%m-%d-%H_%M_%S%z')" >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./android/app/build/outputs/

      - name: Build Release
        shell: bash
        run: |
          hub release create ${{ steps.current-datetime.outputs.CURRENT_DATETIME }} /
          -m ${{ steps.current-datetime.outputs.CURRENT_DATETIME }} /
          -a ./android/app/build/outputs/apk/release/app-release-signed.apk
          -a ./android/app/build/outputs/apk/release/app-release-unsigned.apk /
          -a ./android/app/build/outputs/apk/debug/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
